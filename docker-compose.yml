version: '2.1'
services:

  ######################################################
  # DATABASE SERVICE
  ######################################################
  postgres:
    image: postgres:13
    restart: always
    container_name: postgres
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    ports:
      - "32769:5432"
      #volumes:
      #- ./mnt/postgres:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow_db
      #- PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "airflow_db",
          "-U",
          "airflow"
        ]
      timeout: 45s
      interval: 10s
      retries: 10

  ######################################################
  # SPARK SERVICES
  ######################################################
  spark-master:
    build: ./docker/spark/spark-master
    image: spark-master
    container_name: spark-master
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    ports:
      - "32766:8082"
      - "32765:7077"
    volumes:
      - ./mnt/spark/apps:/opt/spark-apps
      - ./mnt/spark/data:/opt/spark-data
    healthcheck:
      test: [ "CMD", "nc", "-z", "spark-master", "8082" ]
      timeout: 45s
      interval: 10s
      retries: 10

  spark-worker-1:
    build: ./docker/spark/spark-worker
    image: spark-worker-1
    container_name: spark-worker-1
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    depends_on:
      - spark-master
    ports:
      - "32764:8081"
    volumes:
      - ./mnt/spark/apps:/opt/spark-apps
      - ./mnt/spark/data:/opt/spark-data
    healthcheck:
      test: [ "CMD", "nc", "-z", "spark-worker", "8081" ]
      timeout: 45s
      interval: 10s
      retries: 10

  ######################################################
  # AIRFLOW
  ######################################################
  airflow:
    build: ./docker/airflow
    image: airflow-2.3.4
    container_name: airflow
    restart: always
    volumes:
      - ./airflow_repository/airflow.cfg:/opt/airflow/airflow.cfg
      - ./airflow_repository/dags:/opt/airflow/dags
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# NETWORK
######################################################
networks:
  default:
    name: default-network
